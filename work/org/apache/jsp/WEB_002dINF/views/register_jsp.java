/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.0.45
 * Generated at: 2017-11-02 13:52:19 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.views;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class register_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(2);
    _jspx_dependants.put("jar:file:/C:/Users/Administrator/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar!/META-INF/c.tld", Long.valueOf(1153356282000L));
    _jspx_dependants.put("file:/C:/Users/Administrator/.m2/repository/javax/servlet/jstl/1.2/jstl-1.2.jar", Long.valueOf(1502936911994L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fchoose;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fotherwise;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fchoose = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005fc_005fotherwise = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fchoose.release();
    _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.release();
    _005fjspx_005ftagPool_005fc_005fotherwise.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

final java.lang.String _jspx_method = request.getMethod();
if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
return;
}

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");

	String path = request.getContextPath();

      out.write("\r\n");
      out.write("<link type=\"text/css\" rel=\"stylesheet\" href=\"");
      out.print(path);
      out.write("/plugins/toastr/toastr.min.css\" />\r\n");
      out.write("<script src=\"");
      out.print(path);
      out.write("/plugins/toastr/toastr.min.js\"></script>\r\n");
      out.write("<div class=\"registContent\">\r\n");
      out.write("\t");
      if (_jspx_meth_c_005fchoose_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("\tvar $registContent = $footer.find(\".registContent\");\r\n");
      out.write("\t$registContent.find(\"form\").easyform();\r\n");
      out.write("\t$registContent.find(\".register-button-panel\").find(\"button\").on(\"click\",\r\n");
      out.write("\t\t\tfunction() {\r\n");
      out.write("\t\t\t\t/* alert($(\"input[type='hidden']\").val()); */\r\n");
      out.write("\t\t\t\t$form1 = $registContent.find(\"form\");\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\tvar $userName = $form1.find(\"input[type='text']\");\r\n");
      out.write("\t\t\t\tvar $password = $form1.find(\"input[name='account.password']\");\r\n");
      out.write("\t\t\t\tvar $passwordAgain=$form1.find(\"input[name='account.passwordAgain']\");\r\n");
      out.write("\t\t\t\tvar id=$form1.find(\"input[type='hidden']\").val();\r\n");
      out.write("\t\t\t\tif(id == 1){\r\n");
      out.write("\t\t\t\t\tif ($userName.val().length <3 || $userName.val().length>16) {\r\n");
      out.write("\t\t\t\t\t\t$userName.trigger(\"blur\");\r\n");
      out.write("\t\t\t\t\t}else if($password.val().length <6 || $password.val().length>20){\r\n");
      out.write("\t\t\t\t\t\t$password.trigger(\"blur\");\r\n");
      out.write("\t\t\t\t\t}else if($passwordAgain.val().length <6 || $passwordAgain.val().length>20){\r\n");
      out.write("\t\t\t\t\t\t$passwordAgain.trigger(\"blur\");\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\tcache : true,\r\n");
      out.write("\t\t\t\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\t\t\t\turl : $form1.prop(\"action\"),\r\n");
      out.write("\t\t\t\t\t\t\tdata : $form1.serialize(),// 你的formid\r\n");
      out.write("\t\t\t\t\t\t\tasync : false,\r\n");
      out.write("\t\t\t\t\t\t\terror : function(request) {\r\n");
      out.write("\t\t\t\t\t\t\t\ttoastr.error(\"Connection error\");\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t\t\t\tif(data.message == 'success'){\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttoastr.success(\"您已经成功注册！等待管理员验证方可登录\");\r\n");
      out.write("\t\t\t\t\t\t\t\t\t$registContent.find(\".topPanel\").find(\"button\").trigger(\"click\");\r\n");
      out.write("\t\t\t\t\t\t\t\t}else{\r\n");
      out.write("\t\t\t\t\t\t\t\t\ttoastr.warning(data.message);\r\n");
      out.write("\t\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}else if(id==2){\r\n");
      out.write("\t\t\t\t\tif (!$.trim($userName.val())) {\r\n");
      out.write("\t\t\t\t\t\ttoastr.warning(\"用户名不能为空！\");\r\n");
      out.write("\t\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\t\t$.ajax({\r\n");
      out.write("\t\t\t\t\t\t\tcache : true,\r\n");
      out.write("\t\t\t\t\t\t\ttype : \"POST\",\r\n");
      out.write("\t\t\t\t\t\t\turl : $form1.prop(\"action\"),\r\n");
      out.write("\t\t\t\t\t\t\tdata : $form1.serialize(),// 你的formid\r\n");
      out.write("\t\t\t\t\t\t\tasync : false,\r\n");
      out.write("\t\t\t\t\t\t\terror : function(request) {\r\n");
      out.write("\t\t\t\t\t\t\t\ttoastr.error(\"Connection error\");\r\n");
      out.write("\t\t\t\t\t\t\t},\r\n");
      out.write("\t\t\t\t\t\t\tsuccess : function(data) {\r\n");
      out.write("\t\t\t\t\t\t\t\ttoastr.warning(data.message);\r\n");
      out.write("\t\t\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t\t\t});\r\n");
      out.write("\t\t\t\t\t}\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t});\r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fchoose_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:choose
    org.apache.taglibs.standard.tag.common.core.ChooseTag _jspx_th_c_005fchoose_005f0 = (org.apache.taglibs.standard.tag.common.core.ChooseTag) _005fjspx_005ftagPool_005fc_005fchoose.get(org.apache.taglibs.standard.tag.common.core.ChooseTag.class);
    boolean _jspx_th_c_005fchoose_005f0_reused = false;
    try {
      _jspx_th_c_005fchoose_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fchoose_005f0.setParent(null);
      int _jspx_eval_c_005fchoose_005f0 = _jspx_th_c_005fchoose_005f0.doStartTag();
      if (_jspx_eval_c_005fchoose_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t");
          if (_jspx_meth_c_005fwhen_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write("\r\n");
          out.write("\t\t");
          if (_jspx_meth_c_005fotherwise_005f0(_jspx_th_c_005fchoose_005f0, _jspx_page_context))
            return true;
          out.write('\r');
          out.write('\n');
          out.write('	');
          int evalDoAfterBody = _jspx_th_c_005fchoose_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fchoose_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fchoose.reuse(_jspx_th_c_005fchoose_005f0);
      _jspx_th_c_005fchoose_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fchoose_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fchoose_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fwhen_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:when
    org.apache.taglibs.standard.tag.rt.core.WhenTag _jspx_th_c_005fwhen_005f0 = (org.apache.taglibs.standard.tag.rt.core.WhenTag) _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.get(org.apache.taglibs.standard.tag.rt.core.WhenTag.class);
    boolean _jspx_th_c_005fwhen_005f0_reused = false;
    try {
      _jspx_th_c_005fwhen_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fwhen_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      // /WEB-INF/views/register.jsp(11,2) name = test type = boolean reqTime = true required = true fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fwhen_005f0.setTest(((java.lang.Boolean) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id eq 1}", boolean.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null)).booleanValue());
      int _jspx_eval_c_005fwhen_005f0 = _jspx_th_c_005fwhen_005f0.doStartTag();
      if (_jspx_eval_c_005fwhen_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<div class=\"topPanel\">\r\n");
          out.write("\t\t\t\t<div class=\"title\">用户注册</div>\r\n");
          out.write("\t\t\t\t<button>×</button>\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\t\t\t<form method=\"post\" action=\"validateRegister\">\r\n");
          out.write("\t\t\t\t<input type=\"hidden\" name=\"id\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("\t\t\t\t<div class=\"input-group-panle\">\r\n");
          out.write("\t\t\t\t\t<section>\r\n");
          out.write("\t\t\t\t\t\t<label class=\"lable\">用户名称</label> <label class=\"input\"><input\r\n");
          out.write("\t\t\t\t\t\t\ttype=\"text\" name=\"account.userName\"\r\n");
          out.write("\t\t\t\t\t\t\tdata-easyform=\"length:3 16;char-normal;real-time;\"\r\n");
          out.write("                               data-message=\"用户名必须为3—16位的英文字母或数字\"\r\n");
          out.write("                               data-easytip=\"class:easy-blue;\"></label>\r\n");
          out.write("\t\t\t\t\t</section>\r\n");
          out.write("\t\t\t\t\t<section>\r\n");
          out.write("\t\t\t\t\t\t<label class=\"lable\">登陆密码</label> <label class=\"input\"><input\r\n");
          out.write("\t\t\t\t\t\t\ttype=\"password\" name=\"account.password\"\r\n");
          out.write("\t\t\t\t\t\t\tdata-easyform=\"length:6 20;char-normal;real-time;\"\r\n");
          out.write("                               data-message=\"密码必须为6—16位的英文字母或数字\"\r\n");
          out.write("                               data-easytip=\"class:easy-blue;\"></label>\r\n");
          out.write("\t\t\t\t\t</section>\r\n");
          out.write("\t\t\t\t\t<section>\r\n");
          out.write("\t\t\t\t\t\t<label class=\"lable\">确认密码</label> <label class=\"input\"><input\r\n");
          out.write("\t\t\t\t\t\t\ttype=\"password\" name=\"account.passwordAgain\"\r\n");
          out.write("\t\t\t\t\t\t\tdata-easyform=\"length:6 20;char-normal;real-time;\"\r\n");
          out.write("                               data-message=\"密码必须为6—16位的英文字母或数字\"\r\n");
          out.write("                               data-easytip=\"class:easy-blue;\"></label>\r\n");
          out.write("\t\t\t\t\t</section>\r\n");
          out.write("\t\t\t\t</div>\r\n");
          out.write("\t\t\t\t<input name=\"account.name\" type=\"hidden\" value=\"default\">\r\n");
          out.write("\t\t\t\t<input name=\"account.role.id\" type=\"hidden\" value=\"6\">\r\n");
          out.write("\t\t\t\t<input name=\"account.department.id\" type=\"hidden\" value=\"1\">\r\n");
          out.write("\t\t\t</form>\r\n");
          out.write("\t\t\t<div class=\"register-button-panel\">\r\n");
          out.write("\t\t\t\t<button type=\"button\">确定</button>\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\t\t\t<div class=\"footPanel\">\r\n");
          out.write("\t\t\t\t点击注册，即同意我们的<a href=\"#\">用户隐私条款</a>\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fwhen_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fwhen_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fwhen_0026_005ftest.reuse(_jspx_th_c_005fwhen_005f0);
      _jspx_th_c_005fwhen_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fwhen_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fwhen_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_c_005fotherwise_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fchoose_005f0, javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:otherwise
    org.apache.taglibs.standard.tag.common.core.OtherwiseTag _jspx_th_c_005fotherwise_005f0 = (org.apache.taglibs.standard.tag.common.core.OtherwiseTag) _005fjspx_005ftagPool_005fc_005fotherwise.get(org.apache.taglibs.standard.tag.common.core.OtherwiseTag.class);
    boolean _jspx_th_c_005fotherwise_005f0_reused = false;
    try {
      _jspx_th_c_005fotherwise_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fotherwise_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fchoose_005f0);
      int _jspx_eval_c_005fotherwise_005f0 = _jspx_th_c_005fotherwise_005f0.doStartTag();
      if (_jspx_eval_c_005fotherwise_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
        do {
          out.write("\r\n");
          out.write("\t\t\t<div class=\"topPanel\">\r\n");
          out.write("\t\t\t\t<div class=\"title\">找回密码</div>\r\n");
          out.write("\t\t\t\t<button>×</button>\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\t\t\t<form method=\"post\" action=\"validateRegister\">\r\n");
          out.write("\t\t\t\t<input type=\"hidden\" name=\"id\" value=\"");
          out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
          out.write("\">\r\n");
          out.write("\t\t\t\t<div class=\"input-group-panle\">\r\n");
          out.write("\t\t\t\t\t<section>\r\n");
          out.write("\t\t\t\t\t\t<label class=\"lable\">用户名称</label> <label class=\"input\"><input\r\n");
          out.write("\t\t\t\t\t\t\ttype=\"text\" name=\"account.userName\"></label>\r\n");
          out.write("\t\t\t\t\t</section>\r\n");
          out.write("\t\t\t\t</div>\r\n");
          out.write("\t\t\t</form>\r\n");
          out.write("\t\t\t<div class=\"register-button-panel\">\r\n");
          out.write("\t\t\t\t<button type=\"button\">确定</button>\r\n");
          out.write("\t\t\t</div>\r\n");
          out.write("\r\n");
          out.write("\r\n");
          out.write("\t\t");
          int evalDoAfterBody = _jspx_th_c_005fotherwise_005f0.doAfterBody();
          if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
            break;
        } while (true);
      }
      if (_jspx_th_c_005fotherwise_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005fotherwise.reuse(_jspx_th_c_005fotherwise_005f0);
      _jspx_th_c_005fotherwise_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fotherwise_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fotherwise_005f0_reused);
    }
    return false;
  }
}
